version: '3.8'

services:
  postgres:
    image: "postgres:14"
    container_name: "postgres"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - projetos-fiap-2025-hospitalar-notificacoes_app_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - projetos-fiap-2025-hospitalar-notificacoes_app_network

  kafka:
    build:
      context: .
      dockerfile: Dockerfile.kafka
    container_name: kafka
    restart: always
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "consultas-agendadas:1:1"
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    networks:
      - projetos-fiap-2025-hospitalar-notificacoes_app_network

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notification_service_container
    restart: always
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    networks:
      - projetos-fiap-2025-hospitalar-notificacoes_app_network

  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      - postgres
    ports:
      - "8181:8080"
    networks:
      - projetos-fiap-2025-hospitalar-notificacoes_app_network

networks:
  projetos-fiap-2025-hospitalar-notificacoes_app_network:

volumes:
  postgres_data: